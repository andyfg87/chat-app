{"ast":null,"code":"import _toConsumableArray from\"D:\\\\WorkSpace\\\\chat-app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"D:\\\\WorkSpace\\\\chat-app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import queryString from'querystring';import io from'socket.io-client';import'./Chat.css';import'../InfoBar/InfoBar';import'../Input/Input';import{AppBar,Toolbar,IconButton,Typography,Button,Container,Grid,Paper,TextField}from'@material-ui/core';import InfoBar from'../InfoBar/InfoBar';import Input from'../Input/Input';import Messages from'../Messages/Messages';var socket;var Chat=function Chat(_ref){var location=_ref.location;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),room=_useState4[0],setRoom=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),message=_useState6[0],setMessage=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),messages=_useState8[0],setMessages=_useState8[1];var ENDPONT='localhost:5000';useEffect(function(){var _queryString$parse=queryString.parse(location.search.slice(1)),name=_queryString$parse.name,room=_queryString$parse.room;socket=io(ENDPONT);setName(name);setRoom(room);socket.emit('join',{name:name,room:room},function(){});return function(){socket.emit('disconnect');socket.off();};},[ENDPONT,location.search]);useEffect(function(){socket.on('message',function(message){setMessages([].concat(_toConsumableArray(messages),[message]));});},[messages]);//function for sending message\nvar sendMessage=function sendMessage(event){event.preventDefault();if(message){socket.emit('sendMessage',message,function(){return setMessage('');});}};console.log(message,messages);console.log(window.screen.availWidth+\"x\"+window.screen.availHeight);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(InfoBar,{room:room}),/*#__PURE__*/React.createElement(Container,{maxWidth:\"sm\"},/*#__PURE__*/React.createElement(Typography,{component:\"div\",style:{backgroundColor:'black',height:'64vh',width:'100vh'}},/*#__PURE__*/React.createElement(Messages,{messages:messages,name:name})),/*#__PURE__*/React.createElement(Input,{message:message,setMessage:setMessage,sendMessage:sendMessage})));};export default Chat;","map":{"version":3,"sources":["D:/WorkSpace/chat-app/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","AppBar","Toolbar","IconButton","Typography","Button","Container","Grid","Paper","TextField","InfoBar","Input","Messages","socket","Chat","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","ENDPONT","parse","search","slice","emit","off","on","sendMessage","event","preventDefault","console","log","window","screen","availWidth","availHeight","backgroundColor","height","width"],"mappings":"kPAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,MAAOC,CAAAA,WAAP,KAAwB,aAAxB,CACA,MAAOC,CAAAA,EAAP,KAAe,kBAAf,CACA,MAAO,YAAP,CAEA,MAAO,oBAAP,CACA,MAAO,gBAAP,CAEA,OAASC,MAAT,CAAiBC,OAAjB,CAA0BC,UAA1B,CAAsCC,UAAtC,CAAkDC,MAAlD,CAA0DC,SAA1D,CAAqEC,IAArE,CAA2EC,KAA3E,CAAkFC,SAAlF,KAAmG,mBAAnG,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CACA,MAAOC,CAAAA,KAAP,KAAkB,gBAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,sBAArB,CAEA,GAAIC,CAAAA,MAAJ,CAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAAmB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,eACJlB,QAAQ,CAAC,EAAD,CADJ,wCACrBmB,IADqB,eACfC,OADe,8BAEJpB,QAAQ,CAAC,EAAD,CAFJ,yCAErBqB,IAFqB,eAEfC,OAFe,8BAGEtB,QAAQ,CAAC,EAAD,CAHV,yCAGrBuB,OAHqB,eAGZC,UAHY,8BAIIxB,QAAQ,CAAC,EAAD,CAJZ,yCAIrByB,QAJqB,eAIXC,WAJW,eAK5B,GAAMC,CAAAA,OAAO,CAAG,gBAAhB,CAEA1B,SAAS,CAAC,UAAK,wBACWC,WAAW,CAAC0B,KAAZ,CAAkBV,QAAQ,CAACW,MAAT,CAAgBC,KAAhB,CAAsB,CAAtB,CAAlB,CADX,CACHX,IADG,oBACHA,IADG,CACGE,IADH,oBACGA,IADH,CAGXL,MAAM,CAAGb,EAAE,CAACwB,OAAD,CAAX,CAEAP,OAAO,CAACD,IAAD,CAAP,CACAG,OAAO,CAACD,IAAD,CAAP,CAEAL,MAAM,CAACe,IAAP,CAAY,MAAZ,CAAoB,CAAEZ,IAAI,CAAJA,IAAF,CAAQE,IAAI,CAAJA,IAAR,CAApB,CAAoC,UAAI,CAEvC,CAFD,EAIA,MAAO,WAAK,CACRL,MAAM,CAACe,IAAP,CAAY,YAAZ,EAEAf,MAAM,CAACgB,GAAP,GAEH,CALD,CAOH,CAnBQ,CAmBP,CAACL,OAAD,CAAUT,QAAQ,CAACW,MAAnB,CAnBO,CAAT,CAqBA5B,SAAS,CAAC,UAAK,CACXe,MAAM,CAACiB,EAAP,CAAU,SAAV,CAAqB,SAACV,OAAD,CAAY,CAC/BG,WAAW,8BAAKD,QAAL,GAAeF,OAAf,GAAX,CACD,CAFD,EAGH,CAJQ,CAIP,CAACE,QAAD,CAJO,CAAT,CAMA;AACA,GAAMS,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAC3BA,KAAK,CAACC,cAAN,GACA,GAAGb,OAAH,CAAW,CACTP,MAAM,CAACe,IAAP,CAAY,aAAZ,CAA2BR,OAA3B,CAAoC,iBAAMC,CAAAA,UAAU,CAAC,EAAD,CAAhB,EAApC,EACD,CACJ,CALD,CAOAa,OAAO,CAACC,GAAR,CAAYf,OAAZ,CAAqBE,QAArB,EACAY,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,MAAP,CAAcC,UAAd,CAAyB,GAAzB,CAA6BF,MAAM,CAACC,MAAP,CAAcE,WAAvD,EACA,mBAEI,4CACI,oBAAC,OAAD,EAAS,IAAI,CAAErB,IAAf,EADJ,cAEI,oBAAC,SAAD,EAAW,QAAQ,CAAC,IAApB,eACI,oBAAC,UAAD,EAAa,SAAS,CAAC,KAAvB,CAA6B,KAAK,CAAE,CAAEsB,eAAe,CAAE,OAAnB,CAA4BC,MAAM,CAAE,MAApC,CAA4CC,KAAK,CAAE,OAAnD,CAApC,eACG,oBAAC,QAAD,EAAU,QAAQ,CAAIpB,QAAtB,CAAgC,IAAI,CAAEN,IAAtC,EADH,CADJ,cAKI,oBAAC,KAAD,EAAO,OAAO,CAAEI,OAAhB,CAAyB,UAAU,CAAEC,UAArC,CAAiD,WAAW,CAAEU,WAA9D,EALJ,CAFJ,CAFJ,CAiBH,CA7DD,CA+DA,cAAejB,CAAAA,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport queryString from 'querystring'; \r\nimport io from 'socket.io-client';\r\nimport './Chat.css';\r\n\r\nimport '../InfoBar/InfoBar';\r\nimport '../Input/Input';\r\n\r\nimport { AppBar, Toolbar, IconButton, Typography, Button, Container, Grid, Paper, TextField } from '@material-ui/core';\r\nimport InfoBar from '../InfoBar/InfoBar';\r\nimport Input from '../Input/Input';\r\nimport Messages from '../Messages/Messages';\r\n\r\nlet socket;\r\n\r\nconst Chat = ( { location }) => {\r\n    const [name, setName] = useState('');\r\n    const [room, setRoom] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const ENDPONT = 'localhost:5000';\r\n\r\n    useEffect(() =>{\r\n        const { name, room} = queryString.parse(location.search.slice(1));\r\n        \r\n        socket = io(ENDPONT);        \r\n\r\n        setName(name);\r\n        setRoom(room);\r\n\r\n        socket.emit('join', { name, room }, ()=>{\r\n\r\n        });\r\n        \r\n        return () =>{\r\n            socket.emit('disconnect');\r\n\r\n            socket.off();\r\n            \r\n        }\r\n\r\n    },[ENDPONT, location.search]);\r\n\r\n    useEffect(() =>{\r\n        socket.on('message', (message) =>{\r\n          setMessages([...messages, message])\r\n        });\r\n    },[messages]);\r\n\r\n    //function for sending message\r\n    const sendMessage = (event) => {\r\n        event.preventDefault();\r\n        if(message){\r\n          socket.emit('sendMessage', message, () => setMessage(''));\r\n        }\r\n    }\r\n \r\n    console.log(message, messages);\r\n    console.log(window.screen.availWidth+\"x\"+window.screen.availHeight);\r\n    return(\r\n        \r\n        <div>\r\n            <InfoBar room={room}/>\r\n            <Container maxWidth=\"sm\">\r\n                <Typography  component=\"div\" style={{ backgroundColor: 'black', height: '64vh', width: '100vh' }}>\r\n                   <Messages messages = {messages} name={name}/>  \r\n                </Typography >\r\n              \r\n                <Input message={message} setMessage={setMessage} sendMessage={sendMessage}  />\r\n            \r\n            </Container>\r\n            \r\n            \r\n        </div>    \r\n\r\n    )\r\n}\r\n\r\nexport default Chat;"]},"metadata":{},"sourceType":"module"}