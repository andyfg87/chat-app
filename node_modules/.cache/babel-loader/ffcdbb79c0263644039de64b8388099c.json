{"ast":null,"code":"var _jsxFileName = \"D:\\\\WorkSpace\\\\chat-app\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'querystring';\nimport io from 'socket.io-client';\nimport './Chat.css';\nimport '../InfoBar/InfoBar';\nimport '../Input/Input';\nimport { AppBar, Toolbar, IconButton, Typography, Button, Container, Grid, Paper, TextField } from '@material-ui/core';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\nimport Messages from '../Messages/Messages';\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPONT = 'localhost:5000';\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search.slice(1));\n    socket = io(ENDPONT);\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name,\n      room\n    }, () => {});\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPONT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]); //function for sending message\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  console.log(message, messages);\n  console.log(window.screen.availWidth + \"x\" + window.screen.availHeight);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InfoBar, {\n    room: room,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"div\",\n    style: {\n      backgroundColor: 'black',\n      height: '64vh',\n      width: '100vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Messages, {\n    messages: messages,\n    name: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 20\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    message: message,\n    setMessage: setMessage,\n    sendMessage: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Chat;","map":{"version":3,"sources":["D:/WorkSpace/chat-app/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","AppBar","Toolbar","IconButton","Typography","Button","Container","Grid","Paper","TextField","InfoBar","Input","Messages","socket","Chat","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","ENDPONT","parse","search","slice","emit","off","on","sendMessage","event","preventDefault","console","log","window","screen","availWidth","availHeight","backgroundColor","height","width"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport queryString from 'querystring'; \r\nimport io from 'socket.io-client';\r\nimport './Chat.css';\r\n\r\nimport '../InfoBar/InfoBar';\r\nimport '../Input/Input';\r\n\r\nimport { AppBar, Toolbar, IconButton, Typography, Button, Container, Grid, Paper, TextField } from '@material-ui/core';\r\nimport InfoBar from '../InfoBar/InfoBar';\r\nimport Input from '../Input/Input';\r\nimport Messages from '../Messages/Messages';\r\n\r\nlet socket;\r\n\r\nconst Chat = ( { location }) => {\r\n    const [name, setName] = useState('');\r\n    const [room, setRoom] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const ENDPONT = 'localhost:5000';\r\n\r\n    useEffect(() =>{\r\n        const { name, room} = queryString.parse(location.search.slice(1));\r\n        \r\n        socket = io(ENDPONT);        \r\n\r\n        setName(name);\r\n        setRoom(room);\r\n\r\n        socket.emit('join', { name, room }, ()=>{\r\n\r\n        });\r\n        \r\n        return () =>{\r\n            socket.emit('disconnect');\r\n\r\n            socket.off();\r\n            \r\n        }\r\n\r\n    },[ENDPONT, location.search]);\r\n\r\n    useEffect(() =>{\r\n        socket.on('message', (message) =>{\r\n          setMessages([...messages, message])\r\n        });\r\n    },[messages]);\r\n\r\n    //function for sending message\r\n    const sendMessage = (event) => {\r\n        event.preventDefault();\r\n        if(message){\r\n          socket.emit('sendMessage', message, () => setMessage(''));\r\n        }\r\n    }\r\n \r\n    console.log(message, messages);\r\n    console.log(window.screen.availWidth+\"x\"+window.screen.availHeight);\r\n    return(\r\n        \r\n        <div>\r\n            <InfoBar room={room}/>\r\n            <Container maxWidth=\"sm\">\r\n                <Typography  component=\"div\" style={{ backgroundColor: 'black', height: '64vh', width: '100vh' }}>\r\n                   <Messages messages = {messages} name={name}/>  \r\n                </Typography >\r\n              \r\n                <Input message={message} setMessage={setMessage} sendMessage={sendMessage}  />\r\n            \r\n            </Container>\r\n            \r\n            \r\n        </div>    \r\n\r\n    )\r\n}\r\n\r\nexport default Chat;"]},"metadata":{},"sourceType":"module"}